# Maintainer: ant32 <antreimer@gmail.com>

pkgname=mingw-w64-libjpeg-turbo
pkgver=1.3.1
pkgrel=1
arch=('any')
pkgdesc="JPEG image codec with accelerated baseline compression and decompression (mingw-w64)"
license=("GPL, custom")
depends=('mingw-w64-crt')
makedepends=('nasm' 'mingw-w64-gcc')
provides=('mingw-w64-libjpeg')
conflicts=('mingw-w64-libjpeg')
replaces=('mingw-w64-libjpeg')
options=('staticlibs' '!strip' '!buildflags')
url="http://libjpeg-turbo.virtualgl.org"
source=("http://downloads.sourceforge.net/libjpeg-turbo/libjpeg-turbo-$pkgver.tar.gz"
        'libjpeg-turbo-match-autoconf-behavior.patch'
        'temp-fix-for-poppler.patch')
sha256sums=('c132907417ddc40ed552fe53d6b91d5fecbb14a356a60ddc7ea50d6be9666fb9'
            'f98d00e4bd8d791b2474c9d4d2598f1c56fec73730e6ec47fdb53765e419d6f5'
            'e7426279ea678293129a2708b558d26fa3b75c59b887fc30bd1cab83bce99289')

_architectures="i686-w64-mingw32 x86_64-w64-mingw32"

prepare() {
  cd "$srcdir/libjpeg-turbo-$pkgver"
  patch -p1 -i ../libjpeg-turbo-match-autoconf-behavior.patch
  patch -p0 -i ../temp-fix-for-poppler.patch
}

build() {
  export CFLAGS="-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions --param=ssp-buffer-size=4"
  export CXXFLAGS="-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions --param=ssp-buffer-size=4"
  unset LDFLAGS
  for _arch in ${_architectures}; do
    mkdir -p "${srcdir}/build-${_arch}"
    cd "${srcdir}/build-${_arch}"
    ../libjpeg-turbo-${pkgver}/configure \
      --prefix=/usr/${_arch} \
      --build=$CHOST \
      --host=${_arch}
    make
  done
}

package() {
  for _arch in ${_architectures}; do
    cd "${srcdir}/build-${_arch}"
    make DESTDIR="$pkgdir" install
    find "$pkgdir/usr/${_arch}" -name '*.exe' -o -name '*.bat' -o -name '*.def' -o -name '*.exp' | xargs -rtl1 rm
    find "$pkgdir/usr/${_arch}" -name '*.dll' | xargs -rtl1 ${_arch}-strip --strip-unneeded
    find "$pkgdir/usr/${_arch}" -name '*.a' -o -name '*.dll' | xargs -rtl1 ${_arch}-strip -g
    rm -rf "${pkgdir}/usr/${_arch}/"{doc,man,share}
  done
}
